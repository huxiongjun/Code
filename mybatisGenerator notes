mybatis generator 使用步骤:
1.在pom文件中加入相应的依赖信息,以及队医你给的插件
2.在resource 目录下加入generatorCofig.xml 文件
3.写一个自己数据库对应的连接信息的配置文件信息
4.运行对应的maven 插件



database.properties 文件内容如下
# 数据库连接信息
db.driverClassName=com.mysql.jdbc.Driver
db.url=jdbc:mysql://127.0.0.1:3306/deep_order?serverTimezone=GMT
db.username=root
db.password=

# 对应的数据库驱动位置
db.driverLocation=D:\\MybatisGenerator\\mysql-connector-java-8.0.12.jar

# 对应的数据库表名字
db.tableName=t_or_order_attr
# 生成的对应数据库表的实体类的名字
db.entityName=OrderAttr



generatorConfig.xml 文件内容如下:
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--导入属性配置-->
    <properties resource="datasource.properties"></properties>

    <!-- 指定数据库驱动的jdbc驱动jar包的位置 -->
    <classPathEntry location="${db.driverLocation}"/>

    <context id="MySqlDB" targetRuntime="MyBatis3">
        <!--屏蔽掉注释信息-->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--jdbc的数据库连接-->
        <jdbcConnection driverClass="${db.driverClassName}"
                        connectionURL="${db.url}"
                        userId="${db.username}"
                        password="${db.password}">
        </jdbcConnection>


        <!--        &lt;!&ndash;数据库链接地址账号密码&ndash;&gt;-->
        <!--        <jdbcConnection driverClass="com.mysql.jdbc.Driver"-->
        <!--                        connectionURL="jdbc:mysql://127.0.0.1:3306/deep_order?serverTimezone=GMT" userId="root"-->
        <!--                        password="">-->
        <!--        </jdbcConnection>-->

        <!--配置的属性为forceBigDecimals，该属性可以控制是否强制DECIMAL和NUMERIC类型的字段转换为Java类型的java.math.BigDecimal,默认值为false，一般不需要配置。
        默认情况下的转换规则为：
        如果精度>0或者长度>18，就会使用java.math.BigDecimal
        如果精度=0并且10<=长度<=18，就会使用java.lang.Long
        如果精度=0并且5<=长度<=9，就会使用java.lang.Integer
        如果精度=0并且长度<5，就会使用java.lang.Short
        如果设置为true，那么一定会使用java.math.BigDecimal-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>


        <!--数据库对应实体类生成Model类存放位置 该元素必须配置一个，并且最多一个-->
        <javaModelGenerator targetPackage="com.huawei.model" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--生成mapper接口 需要配置生成Dao类存放位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.huawei.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成对应表及类名-->
        <table tableName="${db.tableName}" domainObjectName="${db.entityName}"
               enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true"
               enableSelectByExample="true" selectByExampleQueryId="true">
            <!--        <table tableName="%">-->
            <!--这个元素用来指定自动生成主键的属性（identity字段或者sequences序列）。如果指定这个元素，MBG在生成insert的SQL映射文件中插入一个<selectKey>元素。-->
            <generatedKey column="id" sqlStatement="Mysql"/>
        </table>

    </context>
</generatorConfiguration>





POM 文件
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hu</groupId>
    <artifactId>mybatis-generator-demo</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>

    <dependencies>
        <!--数据库连接依赖-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.12</version>
        </dependency>
        <!--数据库连接池-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.10</version>
        </dependency>
        <!--mybatis starter-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.1.1</version>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <!--MBG插件-->
            <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.6</version>
            </plugin>
        </plugins>
    </build>

</project>
